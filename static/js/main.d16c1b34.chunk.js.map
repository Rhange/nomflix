{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Loader.js","Routes/Detail/DetailPresenter.js","api.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","role","aria-label","Backdrop","bgImage","Content","Cover","Data","Title","h2","ItemContainer","span","Divider","Overview","p","DetailPresenter","result","loading","error","Helmet","Loader","original_title","original_name","backdrop_path","poster_path","require","release_date","substring","first_air_date","runtime","episode_run_time","genres","map","genre","index","length","name","overview","api","axios","create","baseURL","interceptors","request","use","config","params","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","DetailContainer","state","isMovie","includes","a","this","match","push","history","parsedId","parseInt","isNaN","data","console","log","setState","React","Component","Grid","Section","title","children","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","HomePresenter","nowPlaying","upcoming","popular","movie","vote_average","HomeContainer","results","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainer","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d16c1b34.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tfont-size: 32px;\r\n\tmargin-top: 35vh;\r\n`;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => (\r\n\t<Container>\r\n\t\t<span role=\"img\" aria-label=\"Loading\">\r\n\t\t\t⏰ Loading...\r\n\t\t</span>\r\n\t</Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 10px;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    width: 100%;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 20px;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 60vw;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>\r\n              <span role=\"img\" aria-label=\"divider\">\r\n                {\" \"}\r\n                🔹{\" \"}\r\n              </span>\r\n            </Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>\r\n              <span role=\"img\" aria-label=\"divider\">\r\n                {\" \"}\r\n                🔹{\" \"}\r\n              </span>\r\n            </Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n\tbaseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n\tconfig.params = config.params || {};\r\n\tconfig.params[\"api_key\"] = \"add7b186c34e8b73ae87d16ec81780bf\";\r\n\tconfig.params[\"language\"] = \"en-US\";\r\n\treturn config;\r\n});\r\n\r\nexport const movieApi = {\r\n\tnowPlaying: () => api.get(\"movie/now_playing\"),\r\n\tupcoming: () => api.get(\"movie/upcoming\"),\r\n\tpopular: () => api.get(\"movie/popular\"),\r\n\tmovieDetail: (id) =>\r\n\t\tapi.get(`movie/${id}`, {\r\n\t\t\tparams: {\r\n\t\t\t\tappend_to_response: \"videos\",\r\n\t\t\t},\r\n\t\t}),\r\n\tsearch: (term) =>\r\n\t\tapi.get(\"search/movie\", {\r\n\t\t\tparams: {\r\n\t\t\t\tquery: encodeURIComponent(term),\r\n\t\t\t},\r\n\t\t}),\r\n};\r\n\r\nexport const tvApi = {\r\n\ttopRated: () => api.get(\"tv/top_rated\"),\r\n\tpopular: () => api.get(\"tv/popular\"),\r\n\tairingToday: () => api.get(\"tv/airing_today\"),\r\n\tshowDetail: (id) =>\r\n\t\tapi.get(`tv/${id}`, {\r\n\t\t\tparams: {\r\n\t\t\t\tappend_to_response: \"videos\",\r\n\t\t\t},\r\n\t\t}),\r\n\tsearch: (term) =>\r\n\t\tapi.get(\"search/tv\", {\r\n\t\t\tparams: {\r\n\t\t\t\tquery: encodeURIComponent(term),\r\n\t\t\t},\r\n\t\t}),\r\n};\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { tvApi, movieApi } from \"api\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst {\r\n\t\t\tlocation: { pathname },\r\n\t\t} = props;\r\n\t\tthis.state = {\r\n\t\t\tresult: null,\r\n\t\t\tloading: true,\r\n\t\t\terror: null,\r\n\t\t\tisMovie: pathname.includes(\"/movie/\"),\r\n\t\t};\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst {\r\n\t\t\tmatch: {\r\n\t\t\t\tparams: { id },\r\n\t\t\t},\r\n\t\t\thistory: { push },\r\n\t\t} = this.props;\r\n\r\n\t\tconst { isMovie } = this.state;\r\n\r\n\t\tconst parsedId = parseInt(id);\r\n\t\tif (isNaN(parsedId)) {\r\n\t\t\treturn push(\"/\");\r\n\t\t}\r\n\r\n\t\tlet result = null;\r\n\t\ttry {\r\n\t\t\tif (isMovie) {\r\n\t\t\t\t({ data: result } = await movieApi.movieDetail(parsedId));\r\n\t\t\t} else {\r\n\t\t\t\t({ data: result } = await tvApi.showDetail(parsedId));\r\n\t\t\t}\r\n\t\t\tconsole.log(result);\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Can't find anything.\",\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\tresult,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state);\r\n\t\tconst { result, loading, error } = this.state;\r\n\t\treturn <DetailPresenter result={result} loading={loading} error={error} />;\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ✨ {rating} / 10\r\n          </span>\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n\tpadding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\r\n\t<>\r\n\t\t<Helmet>\r\n\t\t\t<title>Movies | Nomflix</title>\r\n\t\t</Helmet>\r\n\t\t{loading ? (\r\n\t\t\t<Loader />\r\n\t\t) : (\r\n\t\t\t<Container>\r\n\t\t\t\t{nowPlaying && nowPlaying.length > 0 && (\r\n\t\t\t\t\t<Section title=\"Now Playing\">\r\n\t\t\t\t\t\t{nowPlaying.map((movie) => (\r\n\t\t\t\t\t\t\t<Poster\r\n\t\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\t\ttitle={movie.original_title}\r\n\t\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t\tisMovie={true}\r\n\t\t\t\t\t\t\t\tyear={movie.release_date && movie.release_date.substring(0, 4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t)}\r\n\t\t\t\t{upcoming && upcoming.length > 0 && (\r\n\t\t\t\t\t<Section title=\"Upcoming Movies\">\r\n\t\t\t\t\t\t{upcoming.map((movie) => (\r\n\t\t\t\t\t\t\t<Poster\r\n\t\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\t\ttitle={movie.original_title}\r\n\t\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t\tisMovie={true}\r\n\t\t\t\t\t\t\t\tyear={movie.release_date && movie.release_date.substring(0, 4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t)}\r\n\t\t\t\t{popular && popular.length > 0 && (\r\n\t\t\t\t\t<Section title=\"Popular Movies\">\r\n\t\t\t\t\t\t{popular.map((movie) => (\r\n\t\t\t\t\t\t\t<Poster\r\n\t\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\t\ttitle={movie.original_title}\r\n\t\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t\tisMovie={true}\r\n\t\t\t\t\t\t\t\tyear={movie.release_date && movie.release_date.substring(0, 4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <Message text={error} color=\"#e74c3c\" />}\r\n\t\t\t</Container>\r\n\t\t)}\r\n\t</>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n\tnowPlaying: PropTypes.array,\r\n\tupcoming: PropTypes.array,\r\n\tpopular: PropTypes.array,\r\n\tloading: PropTypes.bool.isRequired,\r\n\terror: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\tnowPlaying: null,\r\n\t\tupcoming: null,\r\n\t\tpopular: null,\r\n\t\terror: null,\r\n\t\tloading: true,\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: nowPlaying },\r\n\t\t\t} = await movieApi.nowPlaying();\r\n\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: upcoming },\r\n\t\t\t} = await movieApi.upcoming();\r\n\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: popular },\r\n\t\t\t} = await movieApi.popular();\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tnowPlaying,\r\n\t\t\t\tupcoming,\r\n\t\t\t\tpopular,\r\n\t\t\t});\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Can't find movie information\",\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<HomePresenter\r\n\t\t\t\tnowPlaying={nowPlaying}\r\n\t\t\t\tupcoming={upcoming}\r\n\t\t\t\tpopular={popular}\r\n\t\t\t\terror={error}\r\n\t\t\t\tloading={loading}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#e74c3c\" />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updatedTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\tmovieResults: null,\r\n\t\ttvResults: null,\r\n\t\tsearchTerm: \"\",\r\n\t\tloading: false,\r\n\t\terror: null,\r\n\t};\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { searchTerm } = this.state;\r\n\t\tif (searchTerm !== \"\") {\r\n\t\t\tthis.searchByTerm();\r\n\t\t}\r\n\t};\r\n\r\n\tupdateTerm = (event) => {\r\n\t\tconst {\r\n\t\t\ttarget: { value },\r\n\t\t} = event;\r\n\t\tthis.setState({\r\n\t\t\tsearchTerm: value,\r\n\t\t});\r\n\t};\r\n\r\n\tsearchByTerm = async () => {\r\n\t\tconst { searchTerm } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tloading: true,\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: movieResults },\r\n\t\t\t} = await movieApi.search(searchTerm);\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: tvResults },\r\n\t\t\t} = await tvApi.search(searchTerm);\r\n\t\t\tthis.setState({\r\n\t\t\t\tmovieResults,\r\n\t\t\t\ttvResults,\r\n\t\t\t});\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Can't find results.\",\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n\t\treturn (\r\n\t\t\t<SearchPresenter\r\n\t\t\t\tmovieResults={movieResults}\r\n\t\t\t\ttvResults={tvResults}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\terror={error}\r\n\t\t\t\tsearchTerm={searchTerm}\r\n\t\t\t\thandleSubmit={this.handleSubmit}\r\n\t\t\t\tupdateTerm={this.updateTerm}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Shows\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\ttopRated: null,\r\n\t\tpopular: null,\r\n\t\tairingToday: null,\r\n\t\tloading: true,\r\n\t\terror: null,\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: topRated },\r\n\t\t\t} = await tvApi.topRated();\r\n\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: popular },\r\n\t\t\t} = await tvApi.popular();\r\n\r\n\t\t\tconst {\r\n\t\t\t\tdata: { results: airingToday },\r\n\t\t\t} = await tvApi.airingToday();\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttopRated,\r\n\t\t\t\tpopular,\r\n\t\t\t\tairingToday,\r\n\t\t\t});\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Can't find TV information\",\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { topRated, popular, airingToday, loading, error } = this.state;\r\n\t\treturn (\r\n\t\t\t<TVPresenter\r\n\t\t\t\ttopRated={topRated}\r\n\t\t\t\tpopular={popular}\r\n\t\t\t\tairingToday={airingToday}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\terror={error}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tRedirect,\r\n\tSwitch,\r\n} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => (\r\n\t<Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t<Route path=\"/tv\" component={TV} />\r\n\t\t\t<Route path=\"/search\" component={Search} />\r\n\t\t\t<Route path=\"/movie/:id\" component={Detail} />\r\n\t\t\t<Route path=\"/show/:id\" component={Detail} />\r\n\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t</Switch>\r\n\t</Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\nimport \"./api\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}