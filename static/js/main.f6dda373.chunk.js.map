{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Loader.js","Routes/Detail/DetailPresenter.js","api.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","role","aria-label","Backdrop","bgImage","Content","Cover","Data","Title","h2","ItemContainer","span","Divider","Overview","p","DetailPresenter","result","loading","error","Helmet","Loader","original_title","original_name","backdrop_path","poster_path","require","release_date","substring","first_air_date","runtime","episode_run_time","genres","map","genre","index","length","name","overview","api","axios","create","baseURL","interceptors","request","use","config","params","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","DetailContainer","state","isMovie","includes","this","match","push","history","parsedId","parseInt","isNaN","data","console","log","setState","React","Component","Grid","Section","title","children","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","HomePresenter","nowPlaying","upcoming","popular","movie","key","vote_average","HomeContainer","results","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","TVContainer","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,2C,s5BCI3C,IAAMC,EAASC,UAAOC,OAAV,KAcNC,EAAOF,UAAOG,GAAV,KAIJC,EAAOJ,UAAOK,GAAV,KAKJ,SAACC,GAAD,OAAYA,EAAMC,QAAU,UAAY,iBAIxCC,EAAQR,kBAAOS,IAAPT,CAAH,KAOIU,eAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACxB,kBAACZ,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,CAAMG,QAAsB,MAAbI,GACb,kBAACH,EAAD,CAAOK,GAAG,KAAV,WAEF,kBAACT,EAAD,CAAMG,QAAsB,QAAbI,GACb,kBAACH,EAAD,CAAOK,GAAG,OAAV,OAEF,kBAACT,EAAD,CAAMG,QAAsB,YAAbI,GACb,kBAACH,EAAD,CAAOK,GAAG,WAAV,gB,gQC7CR,IAAMC,EAAYd,UAAOe,IAAV,KASA,oBACb,kBAACD,EAAD,KACE,0BAAME,KAAK,MAAMC,aAAW,WAA5B,uB,6xDCRJ,IAAMH,EAAYd,UAAOe,IAAV,KAOTG,EAAWlB,UAAOe,IAAV,KAMY,SAACT,GAAD,OAAWA,EAAMa,WAQrCC,EAAUpB,UAAOe,IAAV,KAWPM,EAAQrB,UAAOe,IAAV,KAGe,SAACT,GAAD,OAAWA,EAAMa,WAUrCG,EAAOtB,UAAOe,IAAV,KAQJQ,EAAQvB,UAAOwB,GAAV,KAKLC,EAAgBzB,UAAOe,IAAV,KAIbX,EAAOJ,UAAO0B,KAAV,KAEJC,EAAU3B,UAAO0B,KAAV,KAIPE,EAAW5B,UAAO6B,EAAV,KAkFCC,EA3ES,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,EAAoBC,MAApB,OACtBD,EACE,oCACE,kBAACE,EAAA,EAAD,KACE,qDAEF,kBAACC,EAAD,OAGF,kBAAC,EAAD,KACE,kBAACD,EAAA,EAAD,KACE,+BACGH,EAAOK,eAAiBL,EAAOK,eAAiBL,EAAOM,cAAe,IADzE,cAKF,kBAACnB,EAAD,CACEC,QAAO,6CAAwCY,EAAOO,iBAExD,kBAAClB,EAAD,KACE,kBAACC,EAAD,CACEF,QACEY,EAAOQ,YAAP,6CAC0CR,EAAOQ,aAC7CC,EAAQ,MAGhB,kBAAClB,EAAD,KACE,kBAACC,EAAD,KACGQ,EAAOK,eACJL,EAAOK,eACPL,EAAOM,eAEb,kBAACZ,EAAD,KACE,kBAAC,EAAD,KACGM,EAAOU,aACJV,EAAOU,aAAaC,UAAU,EAAG,GACjCX,EAAOY,eAAeD,UAAU,EAAG,IAEzC,kBAACf,EAAD,KACE,0BAAMX,KAAK,MAAMC,aAAW,WACzB,IADH,eAEK,MAGP,kBAAC,EAAD,KACGc,EAAOa,QAAUb,EAAOa,QAAUb,EAAOc,iBAAiB,GAD7D,QAGA,kBAAClB,EAAD,KACE,0BAAMX,KAAK,MAAMC,aAAW,WACzB,IADH,eAEK,MAGP,kBAAC,EAAD,KACGc,EAAOe,QACNf,EAAOe,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChBA,IAAUlB,EAAOe,OAAOI,OAAS,EAC7BF,EAAMG,KADV,UAEOH,EAAMG,KAFb,YAMR,kBAACvB,EAAD,KAAWG,EAAOqB,c,QC9ItBC,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,kCAGXH,EAAII,aAAaC,QAAQC,KAAI,SAACC,GAI5B,OAHAA,EAAOC,OAASD,EAAOC,QAAU,GACjCD,EAAOC,OAAP,QAA2B,mCAC3BD,EAAOC,OAAP,SAA4B,QACrBD,KAGF,IAAME,GACC,kBAAMT,EAAIU,IAAI,sBADfD,GAED,kBAAMT,EAAIU,IAAI,mBAFbD,GAGF,kBAAMT,EAAIU,IAAI,kBAHZD,GAIE,SAACE,GAAD,OACXX,EAAIU,IAAJ,gBAAiBC,GAAM,CACrBH,OAAQ,CACNI,mBAAoB,aAPfH,GAUH,SAACI,GAAD,OACNb,EAAIU,IAAI,eAAgB,CACtBF,OAAQ,CACNM,MAAOC,mBAAmBF,OAKrBG,GACD,kBAAMhB,EAAIU,IAAI,iBADbM,GAEF,kBAAMhB,EAAIU,IAAI,eAFZM,GAGE,kBAAMhB,EAAIU,IAAI,oBAHhBM,GAIC,SAACL,GAAD,OACVX,EAAIU,IAAJ,aAAcC,GAAM,CAClBH,OAAQ,CACNI,mBAAoB,aAPfI,GAUH,SAACH,GAAD,OACNb,EAAIU,IAAI,YAAa,CACnBF,OAAQ,CACNM,MAAOC,mBAAmBF,OC1CnBI,G,kDCGb,WAAYhE,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGHK,EACVL,EADFM,SAAYD,SAHG,OAKjB,EAAK4D,MAAQ,CACXxC,OAAQ,KACRC,SAAS,EACTC,MAAO,KACPuC,QAAS7D,EAAS8D,SAAS,YATZ,E,mMAmBbC,KAAKpE,MAHK0D,E,EADZW,MACEd,OAAUG,GAEDY,E,EAAXC,QAAWD,KAGLJ,EAAYE,KAAKH,MAAjBC,QAEFM,EAAWC,SAASf,IACtBgB,MAAMF,G,yCACDF,EAAK,M,UAGV7C,EAAS,K,UAEPyC,E,kCACwBV,GAAqBgB,G,iBAAtC/C,E,EAANkD,K,yCAEuBZ,GAAiBS,G,iBAAlC/C,E,EAANkD,K,QAELC,QAAQC,IAAIpD,G,kDAEZ2C,KAAKU,SAAS,CACZnD,MAAO,yB,yBAGTyC,KAAKU,SAAS,CACZpD,SAAS,EACTD,W,kKAMJmD,QAAQC,IAAIT,KAAKH,OADV,MAE4BG,KAAKH,MAAhCxC,EAFD,EAECA,OAAQC,EAFT,EAESA,QAASC,EAFlB,EAEkBA,MACzB,OAAO,kBAAC,EAAD,CAAiBF,OAAQA,EAAQC,QAASA,EAASC,MAAOA,Q,GApDxCoD,IAAMC,W,+hBCAnC,IAAMxE,GAAYd,UAAOe,IAAV,MAMTQ,GAAQvB,UAAO0B,KAAV,MAKL6D,GAAOvF,UAAOe,IAAV,MAyBKyE,GAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAQD,GACR,kBAACF,GAAD,KAAOG,K,gOCxBX,IAAM5E,GAAYd,UAAOe,IAAV,MAMT4E,GAAO3F,UAAO0B,KAAV,MACC,SAACpB,GAAD,OAAWA,EAAMsF,SAcbC,GAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,kBAAC,GAAD,KACE,kBAACD,GAAD,CAAMC,MAAOA,GAAQE,K,26BCXzB,IAAMhF,GAAYd,UAAOe,IAAV,MAITgF,GAAQ/F,UAAOe,IAAV,MACe,SAACT,GAAD,OAAWA,EAAM0F,SAQrCC,GAASjG,UAAO0B,KAAV,MAONwE,GAAiBlG,UAAOe,IAAV,KAIdgF,GAGAE,IAMA1E,GAAQvB,UAAO0B,KAAV,MAKLyE,GAAOnG,UAAO0B,KAAV,MAuCK0E,GAlCA,SAAC,GAAD,IAAGpC,EAAH,EAAGA,GAAIqC,EAAP,EAAOA,SAAUZ,EAAjB,EAAiBA,MAAOa,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsC/B,eAAtC,gBACb,kBAAC,IAAD,CAAM3D,GAAI2D,EAAO,iBAAaR,GAAb,gBAA6BA,IAC5C,kBAAC,GAAD,KACE,kBAACkC,GAAD,KACE,kBAACH,GAAD,CACEC,MACEK,EAAQ,yCAC8BA,GAClC7D,EAAQ,MAGhB,kBAACyD,GAAD,KACE,0BAAMjF,KAAK,MAAMC,aAAW,UAA5B,UACKqF,EADL,WAKJ,kBAAC,GAAD,KACGb,EAAMvC,OAAS,GAAf,UAAuBuC,EAAM/C,UAAU,EAAG,IAA1C,OAAqD+C,GAExD,kBAACU,GAAD,KAAOI,M,2FC3Db,IAAMzF,GAAYd,UAAOe,IAAV,MA2EAyF,GAvEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAAS3E,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,MAA3C,OACpB,oCACE,kBAACC,EAAA,EAAD,KACE,oDAEDF,EACC,kBAACG,EAAD,MAEA,kBAAC,GAAD,KACE,kBAACD,EAAA,EAAD,KACE,oDAEDuE,GAAcA,EAAWvD,OAAS,GACjC,kBAAC,GAAD,CAASuC,MAAM,eACZgB,EAAW1D,KAAI,SAAC6D,GAAD,OACd,kBAAC,GAAD,CACEC,IAAKD,EAAM5C,GACXA,GAAI4C,EAAM5C,GACVyB,MAAOmB,EAAMxE,eACbiE,SAAUO,EAAMrE,YAChB+D,OAAQM,EAAME,aACdtC,SAAS,EACT+B,KAAMK,EAAMnE,cAAgBmE,EAAMnE,aAAaC,UAAU,EAAG,SAKnEgE,GAAYA,EAASxD,OAAS,GAC7B,kBAAC,GAAD,CAASuC,MAAM,mBACZiB,EAAS3D,KAAI,SAAC6D,GAAD,OACZ,kBAAC,GAAD,CACEC,IAAKD,EAAM5C,GACXA,GAAI4C,EAAM5C,GACVyB,MAAOmB,EAAMxE,eACbiE,SAAUO,EAAMrE,YAChB+D,OAAQM,EAAME,aACdtC,SAAS,EACT+B,KAAMK,EAAMnE,cAAgBmE,EAAMnE,aAAaC,UAAU,EAAG,SAKnEiE,GAAWA,EAAQzD,OAAS,GAC3B,kBAAC,GAAD,CAASuC,MAAM,kBACZkB,EAAQ5D,KAAI,SAAC6D,GAAD,OACX,kBAAC,GAAD,CACEC,IAAKD,EAAM5C,GACXA,GAAI4C,EAAM5C,GACVyB,MAAOmB,EAAMxE,eACbiE,SAAUO,EAAMrE,YAChB+D,OAAQM,EAAME,aACdtC,SAAS,EACT+B,KAAMK,EAAMnE,cAAgBmE,EAAMnE,aAAaC,UAAU,EAAG,SAKnET,GAAS,kBAAC,GAAD,CAAS6D,KAAM7D,EAAO2D,MAAM,eCpE/BmB,G,4MCGbxC,MAAQ,CACNkC,WAAY,KACZC,SAAU,KACVC,QAAS,KACT1E,MAAO,KACPD,SAAS,G,qNAOG8B,K,uBADS2C,E,EAAjBxB,KAAQ+B,Q,SAKAlD,K,uBADS4C,E,EAAjBzB,KAAQ+B,Q,UAKAlD,K,iBADS6C,E,EAAjB1B,KAAQ+B,QAGVtC,KAAKU,SAAS,CACZqB,aACAC,WACAC,Y,kDAGFjC,KAAKU,SAAS,CACZnD,MAAO,iC,yBAGTyC,KAAKU,SAAS,CACZpD,SAAS,I,kKAKL,IAAD,EACmD0C,KAAKH,MAAvDkC,EADD,EACCA,WAAYC,EADb,EACaA,SAAUC,EADvB,EACuBA,QAAS1E,EADhC,EACgCA,MAAOD,EADvC,EACuCA,QAC9C,OACE,kBAAC,GAAD,CACEyE,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACT1E,MAAOA,EACPD,QAASA,Q,GA/CYqD,IAAMC,W,wUCKnC,IAAMxE,GAAYd,UAAOe,IAAV,MAITkG,GAAOjH,UAAOkH,KAAV,MAKJC,GAAQnH,UAAOoH,MAAV,MAmFIC,GA7ES,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAvF,EAHsB,EAGtBA,QACAC,EAJsB,EAItBA,MACAuF,EALsB,EAKtBA,WACAC,EANsB,EAMtBA,aACAC,EAPsB,EAOtBA,WAPsB,OAStB,kBAAC,GAAD,KACE,kBAACxF,EAAA,EAAD,KACE,oDAEF,kBAAC+E,GAAD,CAAMU,SAAUF,GACd,kBAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,KAGb1F,EACC,kBAACG,EAAD,MAEA,oCACGmF,GAAgBA,EAAapE,OAAS,GACrC,kBAAC,GAAD,CAASuC,MAAM,iBACZ6B,EAAavE,KAAI,SAAC6D,GAAD,OAChB,kBAAC,GAAD,CACEC,IAAKD,EAAM5C,GACXA,GAAI4C,EAAM5C,GACVyB,MAAOmB,EAAMxE,eACbiE,SAAUO,EAAMrE,YAChB+D,OAAQM,EAAME,aACdtC,SAAS,EACT+B,KAAMK,EAAMnE,cAAgBmE,EAAMnE,aAAaC,UAAU,EAAG,SAKnE6E,GAAaA,EAAUrE,OAAS,GAC/B,kBAAC,GAAD,CAASuC,MAAM,mBACZ8B,EAAUxE,KAAI,SAACgF,GAAD,OACb,kBAAC,GAAD,CACElB,IAAKkB,EAAK/D,GACVA,GAAI+D,EAAK/D,GACTyB,MAAOsC,EAAK1F,cACZgE,SAAU0B,EAAKxF,YACf+D,OAAQyB,EAAKjB,aACbP,KACEwB,EAAKpF,gBAAkBoF,EAAKpF,eAAeD,UAAU,EAAG,UAQrET,GAAS,kBAAC,GAAD,CAAS6D,KAAM7D,EAAO2D,MAAM,YACrC2B,GACCD,GACqB,IAArBC,EAAUrE,QACc,IAAxBoE,EAAapE,QACX,kBAAC,GAAD,CAAS4C,KAAK,gBAAgBF,MAAM,cCpF7BoC,G,4MCGbzD,MAAQ,CACN+C,aAAc,KACdC,UAAW,KACXC,WAAY,GACZxF,SAAS,EACTC,MAAO,M,EAGTwF,aAAe,SAACQ,GACdA,EAAMC,iBAEa,KADI,EAAK3D,MAApBiD,YAEN,EAAKW,gB,EAITT,WAAa,SAACO,GAAW,IAEXJ,EACRI,EADFG,OAAUP,MAEZ,EAAKzC,SAAS,CACZoC,WAAYK,K,EAIhBM,a,sBAAe,oCAAAE,EAAA,6DACLb,EAAe,EAAKjD,MAApBiD,WACR,EAAKpC,SAAS,CACZpD,SAAS,IAHE,kBAQD8B,GAAgB0D,GARf,uBAOQF,EAPR,EAOTrC,KAAQ+B,QAPC,SAWD3C,GAAamD,GAXZ,gBAUQD,EAVR,EAUTtC,KAAQ+B,QAEV,EAAK5B,SAAS,CACZkC,eACAC,cAdS,kDAiBX,EAAKnC,SAAS,CACZnD,MAAO,wBAlBE,yBAqBX,EAAKmD,SAAS,CACZpD,SAAS,IAtBA,6E,uDA2BL,IAAD,EACyD0C,KAAKH,MAA7D+C,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAYxF,EADtC,EACsCA,QAASC,EAD/C,EAC+CA,MACtD,OACE,kBAAC,GAAD,CACEqF,aAAcA,EACdC,UAAWA,EACXvF,QAASA,EACTC,MAAOA,EACPuF,WAAYA,EACZC,aAAc/C,KAAK+C,aACnBC,WAAYhD,KAAKgD,iB,GA/DIrC,IAAMC,W,2FCKnC,IAAMxE,GAAYd,UAAOe,IAAV,MA2EAuH,GAvEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAU5B,EAAb,EAAaA,QAAS6B,EAAtB,EAAsBA,YAAaxG,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,MAA5C,OAClB,oCACE,kBAACC,EAAA,EAAD,KACE,sDAEDF,EACC,kBAACG,EAAD,MAEA,kBAAC,GAAD,KACGoG,GAAYA,EAASrF,OAAS,GAC7B,kBAAC,GAAD,CAASuC,MAAM,mBACZ8C,EAASxF,KAAI,SAACgF,GAAD,OACZ,kBAAC,GAAD,CACElB,IAAKkB,EAAK/D,GACVA,GAAI+D,EAAK/D,GACTyB,MAAOsC,EAAK1F,cACZgE,SAAU0B,EAAKxF,YACf+D,OAAQyB,EAAKjB,aACbP,KACEwB,EAAKpF,gBAAkBoF,EAAKpF,eAAeD,UAAU,EAAG,SAMjEiE,GAAWA,EAAQzD,OAAS,GAC3B,kBAAC,GAAD,CAASuC,MAAM,iBACZkB,EAAQ5D,KAAI,SAACgF,GAAD,OACX,kBAAC,GAAD,CACElB,IAAKkB,EAAK/D,GACVA,GAAI+D,EAAK/D,GACTyB,MAAOsC,EAAK1F,cACZgE,SAAU0B,EAAKxF,YACf+D,OAAQyB,EAAKjB,aACbP,KACEwB,EAAKpF,gBAAkBoF,EAAKpF,eAAeD,UAAU,EAAG,SAMjE8F,GAAeA,EAAYtF,OAAS,GACnC,kBAAC,GAAD,CAASuC,MAAM,gBACZ+C,EAAYzF,KAAI,SAACgF,GAAD,OACf,kBAAC,GAAD,CACElB,IAAKkB,EAAK/D,GACVA,GAAI+D,EAAK/D,GACTyB,MAAOsC,EAAK1F,cACZgE,SAAU0B,EAAKxF,YACf+D,OAAQyB,EAAKjB,aACbP,KACEwB,EAAKpF,gBAAkBoF,EAAKpF,eAAeD,UAAU,EAAG,SAMjET,GAAS,kBAAC,GAAD,CAAS6D,KAAM7D,EAAO2D,MAAM,eCpE/B6C,G,4MCGblE,MAAQ,CACNgE,SAAU,KACV5B,QAAS,KACT6B,YAAa,KACbxG,SAAS,EACTC,MAAO,M,qNAOKoC,K,uBADSkE,E,EAAjBtD,KAAQ+B,Q,SAKA3C,K,uBADSsC,E,EAAjB1B,KAAQ+B,Q,UAKA3C,K,iBADSmE,E,EAAjBvD,KAAQ+B,QAGVtC,KAAKU,SAAS,CACZmD,WACA5B,UACA6B,gB,kDAGF9D,KAAKU,SAAS,CACZnD,MAAO,8B,yBAGTyC,KAAKU,SAAS,CACZpD,SAAS,I,kKAKL,IAAD,EACoD0C,KAAKH,MAAxDgE,EADD,EACCA,SAAU5B,EADX,EACWA,QAAS6B,EADpB,EACoBA,YAAaxG,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,MACjD,OACE,kBAAC,GAAD,CACEsG,SAAUA,EACV5B,QAASA,EACT6B,YAAaA,EACbxG,QAASA,EACTC,MAAOA,Q,GA/CcoD,IAAMC,WCSpB,qBACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoD,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,KAAK,MAAME,UAAWE,KAC7B,kBAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,kBAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,kBAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,kBAAC,IAAD,CAAUC,KAAK,IAAIpI,GAAG,S,+fCnB5B,IAkBeqI,GAlBMC,4BAAH,KACZC,MCSSC,OATf,WACE,OACE,oCACE,kBAACC,GAAD,MACA,kBAACC,GAAD,QCHNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f6dda373.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  margin-top: 35vh;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰ Loading...\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 10px;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    width: 100%;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 20px;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 60vw;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>\r\n              <span role=\"img\" aria-label=\"divider\">\r\n                {\" \"}\r\n                🔹{\" \"}\r\n              </span>\r\n            </Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>\r\n              <span role=\"img\" aria-label=\"divider\">\r\n                {\" \"}\r\n                🔹{\" \"}\r\n              </span>\r\n            </Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\"\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  config.params = config.params || {};\r\n  config.params[\"api_key\"] = \"add7b186c34e8b73ae87d16ec81780bf\";\r\n  config.params[\"language\"] = \"en-US\";\r\n  return config;\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { tvApi, movieApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n\r\n    const { isMovie } = this.state;\r\n\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n      console.log(result);\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find anything.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        result\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const { result, loading, error } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ✨ {rating} / 10\r\n          </span>\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await movieApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await movieApi.upcoming();\r\n\r\n      const {\r\n        data: { results: popular }\r\n      } = await movieApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#e74c3c\" />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updatedTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find results.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Shows\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" component={TV} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}